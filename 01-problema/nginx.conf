events {
    worker_connections 1024;
}

http {
    # Configuración de upstream para load balancing
    upstream reservas_backend {
        # Round-robin por defecto
        server servidor-1:8080 weight=1;
        server servidor-2:8080 weight=1;
        server servidor-3:8080 weight=1;
        
        # Configuración para detectar servidores caídos
        keepalive 32;
    }

    # Configuración de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Configuración del servidor
    server {
        listen 80;
        server_name localhost;

        # Headers para CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

        # Manejar preflight requests
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Proxy a los servidores backend
            proxy_pass http://reservas_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # No cache para evitar problemas con el estado
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # Endpoint especial para mostrar qué servidor responde
        location /debug {
            proxy_pass http://reservas_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Agregar header con información del upstream
            add_header X-Upstream-Server $upstream_addr always;
        }

        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "nginx OK\n";
            add_header Content-Type text/plain;
        }

        # Página de error personalizada
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            return 502 '{"error": "Backend servers unavailable", "message": "All reservation servers are down"}';
            add_header Content-Type application/json;
        }
    }
}